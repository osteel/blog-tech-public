<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>osteel's blog</title><link>https://tech.osteel.me/</link><description></description><pubDate>Mon, 08 Jun 2020 00:00:00 +0100</pubDate><item><title>Docker for local web development, part 8: scheduled tasks</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-8-scheduled-tasks</link><description>&lt;p&gt;Once we start to get comfortable around Docker and make it a full component of our development environment, inevitably there will come a time when we have to deal with some form of task scheduling.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 08 Jun 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-06-08:posts/docker-for-local-web-development-part-8-scheduled-tasks</guid><category>tutorial</category><category>docker</category><category>cron</category><category>scheduler</category></item><item><title>Docker for local web development, part 7: using a multi-stage build to introduce a worker</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-7-using-a-multi-stage-build-to-introduce-a-worker</link><description>&lt;p&gt;There are many ways to increase an API's responsivity, and one of them which is also the focus of today's article is the use of queues. Queues are basically lists of tasks to be performed at a later time which, unlike flossing, will be completed eventually. What's important about those tasks – called jobs – is that they don't need to be performed during the lifecycle of the initial request.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 25 May 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-05-25:posts/docker-for-local-web-development-part-7-using-a-multi-stage-build-to-introduce-a-worker</guid><category>tutorial</category><category>docker</category><category>worker</category><category>redis</category></item><item><title>Docker for local web development, part 6: expose a local container to the Internet</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-6-expose-a-local-container-to-the-internet</link><description>&lt;p&gt;While using Docker for local development allows us to replicate a production environment as closely as possible in a self-contained way, in some instances exposure to the outside world is unavoidable. Typical use cases include testing a third-party service's webhook (like a transaction confirmation from a payment gateway), or showing a project's advancement to a client.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 11 May 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-05-11:posts/docker-for-local-web-development-part-6-expose-a-local-container-to-the-internet</guid><category>tutorial</category><category>docker</category><category>ngrok</category></item><item><title>Docker for local web development, part 5: HTTPS all the things</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-5-https-all-the-things</link><description>&lt;p&gt;While it is getting ever cheaper and easier to encrypt the web, somehow this evolution doesn't extend to local environments, where bringing in HTTPS is still far from a sinecure. This article intends to ease the pain by showing you how to generate a self-signed SSL/TLS certificate and how to use it with our Docker-based setup, thus getting us one step closer to perfectly mimicking a production environment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 27 Apr 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-04-27:posts/docker-for-local-web-development-part-5-https-all-the-things</guid><category>tutorial</category><category>docker</category><category></category></item><item><title>Docker for local web development, part 4: smoothing things out with Bash</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-4-smoothing-things-out-with-bash</link><description>&lt;p&gt;As our development environment is taking shape, the number of commands we need to remember starts to build up. With little effort, Bash will allow us to add a layer on top of Docker to abstract away most of the complexity, and introduce a standardised, user-friendly interface instead.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-04-13:posts/docker-for-local-web-development-part-4-smoothing-things-out-with-bash</guid><category>tutorial</category><category>docker</category><category>bash</category></item><item><title>Docker for local web development, part 3: a three-tier architecture with frameworks</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-3-a-three-tier-architecture-with-frameworks</link><description>&lt;p&gt;There are many ways to manage a multitiered project with Docker, and while the approach I am about to describe certainly isn't the only one, I also think this is a subject that doesn't get much coverage at all.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 30 Mar 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-30:posts/docker-for-local-web-development-part-3-a-three-tier-architecture-with-frameworks</guid><category>tutorial</category><category>docker</category><category>laravel</category><category>vuejs</category></item><item><title>Docker for local web development, part 2: put your images on a diet</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-2-put-your-images-on-a-diet</link><description>&lt;p&gt;By using standard Linux distributions, we embark a lot of tools and services we don't always need, unnecessarily increasing the size of the images in the process. In turn, this has an impact on performance, security and, sometimes, the cost of deployment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-16:posts/docker-for-local-web-development-part-2-put-your-images-on-a-diet</guid><category>tutorial</category><category>docker</category><category>alpine</category></item><item><title>Docker for local web development, part 1: a basic LEMP stack</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack</link><description>&lt;p&gt;I trust you already read the introduction to this series and are now ready for some action. The first thing to do is to head over to the Docker website and download and install Docker Desktop for Mac or PC, or head over here for installation instructions on various Linux distributions.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2020 12:16:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-04:posts/docker-for-local-web-development-part-1-a-basic-lemp-stack</guid><category>tutorial</category><category>docker</category><category>lemp</category></item><item><title>Docker for local web development, appendix A: Docker on Windows</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-appendix-a-docker-on-windows</link><description>&lt;p&gt;You might have heard some rumours claiming Docker is a bit of a pain to run on Windows. The bad new is these rumours are mostly true. All is not lost, however: most hurdles come with little tricks that, once known and applied, make the experience of Docker on Windows almost the same as a Unix-based system.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2020 12:12:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-04:posts/docker-for-local-web-development-appendix-a-docker-on-windows</guid><category>tutorial</category><category>docker</category><category>windows</category></item><item><title>Docker for local web development, introduction: why should you care?</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-introduction-why-should-you-care</link><description>&lt;p&gt;The first version of Docker was released in 2013 and, since then, it has worked its way up to eventually becoming the industry standard for containers. Among developers, exposure to Docker ranges from having vaguely heard of the technology to using it on a daily basis, the latter category singing its praises while the former is sometimes still struggling with the sheer concept of containers.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2020 12:04:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-04:posts/docker-for-local-web-development-introduction-why-should-you-care</guid><category>tutorial</category><category>docker</category></item><item><title>Talking about Collections at PHP Quebec</title><link>https://tech.osteel.me/posts/talking-about-collections-at-php-quebec</link><description>&lt;p&gt;Who knew Collections were so popular? After Laravel Montreal last month, I will be speaking about Collections again at PHP Quebec on July 4.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sat, 29 Jun 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2019-06-29:posts/talking-about-collections-at-php-quebec</guid><category>php</category><category>collections</category><category>phpquebec</category><category>presentation</category></item><item><title>Talking about Collections at Laravel Montreal</title><link>https://tech.osteel.me/posts/talking-about-collections-at-laravel-montreal</link><description>&lt;p&gt;I have been a bit busy since I moved to Montreal back in February last year and one of the things I've been doing is regularly attending Laravel Montreal meetups.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 28 May 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2019-05-28:posts/talking-about-collections-at-laravel-montreal</guid><category>laravel</category><category>collections</category><category>laravelmontreal</category><category>presentation</category></item><item><title>Having issues with your cordless Logitech Unifying device on MacOS? Don't throw it away just yet</title><link>https://tech.osteel.me/posts/having-issues-with-your-cordless-logitech-unifying-device-on-macos-dont-throw-it-away-just-yet</link><description>&lt;p&gt;The cordless Logitech Unifying devices can be a bit funny when it comes to MacOS Sierra, be it the scrolling acting weird or the device not being detected altogether. Follow these quick steps to hopefully fix your problem.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 21 Sep 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2017-09-21:posts/having-issues-with-your-cordless-logitech-unifying-device-on-macos-dont-throw-it-away-just-yet</guid><category>logitech</category><category>mouse</category><category>keyboard</category><category>unifying</category><category>macos</category></item><item><title>UK Contractors: should you switch off the Flat Rate Scheme?</title><link>https://tech.osteel.me/posts/uk-contractors-should-you-switch-off-the-flat-rate-scheme</link><description>&lt;p&gt;With the new fiscal year just a few days ahead, as a contractor you've probably heard about the Budget changes. And if you are like me up until a few days ago, you might not be sure whether you should take action or not. Let's try and bring some clarification to these changes.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2017-03-26:posts/uk-contractors-should-you-switch-off-the-flat-rate-scheme</guid><category>contracting</category><category>vat</category><category>uk</category><category>flatratescheme</category><category>standardscheme</category></item><item><title>Contracting in the UK: a tax breakdown</title><link>https://tech.osteel.me/posts/contracting-in-the-uk-a-tax-breakdown</link><description>&lt;p&gt;When I started contracting about a year and a half ago, I absolutely didn't want to have to deal with anything accounting-related. Which is fine really, as getting an accountant is highly recommended anyway - for various good reasons - and there is a plethora of companies on the market that do just that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 22 Dec 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2016-12-22:posts/contracting-in-the-uk-a-tax-breakdown</guid><category>contracting</category><category>taxes</category><category>uk</category></item><item><title>How to enable NFS on Laravel Homestead</title><link>https://tech.osteel.me/posts/how-to-enable-nfs-on-laravel-homestead</link><description>&lt;p&gt;I currently work on a Laravel project composed of multiple microservices that I run locally using &lt;a href="https://laravel.com/docs/master/homestead"&gt;Homestead&lt;/a&gt; (box v0.4.0 at the time of writing). As I started tinkering around I noticed that requesting the different APIs was super slow, up to 20s per request, which was really unexpected (and annoying to say the least).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2016-01-19:posts/how-to-enable-nfs-on-laravel-homestead</guid><category>laravel</category><category>homestead</category><category>nfs</category><category>sharedfolder</category><category>tutorial</category><category>virtualbox</category></item><item><title>From Vagrant to Docker: How to use Docker for local web development</title><link>https://tech.osteel.me/posts/from-vagrant-to-docker-how-to-use-docker-for-local-web-development</link><description>&lt;p&gt;If you are somewhat following what's happening in the tech world, you must have heard of Docker.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-12-18:posts/from-vagrant-to-docker-how-to-use-docker-for-local-web-development</guid><category>docker</category><category>php</category><category>mysql</category><category>phpmyadmin</category><category>nginx</category><category>tutorial</category><category>webdevelopment</category><category>environment</category></item><item><title>How to use the fork of a repository with Composer</title><link>https://tech.osteel.me/posts/how-to-use-the-fork-of-a-repository-with-composer</link><description>&lt;p&gt;When using packages maintained by other developers, you often find yourself waiting for a fix, an update or the merge of a PR that will come with the next release but you need it now. A workaround is to fork the corresponding repository (which you may have done already if you are the author of the PR), make the updates you need and then use your fork in your project instead of the original package.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-08-10:posts/how-to-use-the-fork-of-a-repository-with-composer</guid><category>composer</category><category>github</category><category>fork</category><category>repository</category><category>php</category></item><item><title>Handling CORS with Nginx</title><link>https://tech.osteel.me/posts/handling-cors-with-nginx</link><description>&lt;p&gt;With the always wider adoption of API-driven architecture, chances are you already had to deal with &lt;a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS" title="HTTP access control (CORS)"&gt;cross-origin resource sharing&lt;/a&gt; at some point.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 19 Jul 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-07-19:posts/handling-cors-with-nginx</guid><category>cors</category><category>crossoriginresourcesharing</category><category>nginx</category><category>homestead</category></item><item><title>Database management with Adminer (and how to install on Homestead)</title><link>https://tech.osteel.me/posts/database-management-with-adminer-and-how-to-install-on-homestead</link><description>&lt;p&gt;For quite some time now I have been prefering accessing databases from the CLI, but sometimes it can feel overkill when wanting to quickly check or update something, say.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-06-19:posts/database-management-with-adminer-and-how-to-install-on-homestead</guid><category>adminer</category><category>phpmyadmin</category><category>database</category><category>homestead</category><category>laravel</category></item><item><title>Laravel Homestead: debug an API with Xdebug and cURL in Sublime Text</title><link>https://tech.osteel.me/posts/laravel-homestead-debug-an-api-with-xdebug-and-curl-in-sublime-text</link><description>&lt;p&gt;There are a few tutorials out there about how to set up Sublime Text and Xdebug so they play nice together. The good news is that in our case, Homestead has covered the configuration of Xdebug for us: the tool is already available and reporting for duty.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sat, 23 May 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-05-23:posts/laravel-homestead-debug-an-api-with-xdebug-and-curl-in-sublime-text</guid><category>laravel</category><category>homestead</category><category>xdebug</category><category>curl</category><category>sublimetext</category><category>api</category></item><item><title>Extending Homestead: how to customize Laravel's Virtual Machine (the example of Apache)</title><link>https://tech.osteel.me/posts/extending-homestead-how-to-customize-laravels-virtual-machine-the-example-of-apache</link><description>&lt;p&gt;Homestead offers a nice pre-packaged environment. But as a project grows in complexity, there will be a time where extra packages will be necessary. How to install them properly, and not to lose everything any time we need to recreate the box? How does one &lt;em&gt;extend&lt;/em&gt; Homestead?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 13 May 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-05-13:posts/extending-homestead-how-to-customize-laravels-virtual-machine-the-example-of-apache</guid><category>laravel</category><category>homestead</category><category>apache</category><category>vagrant</category></item><item><title>How to start a new Laravel 5 project with Homestead - quick reference</title><link>https://tech.osteel.me/posts/how-to-start-a-new-laravel5-project-with-homestead-quick-reference</link><description>&lt;p&gt;I wrote this short get-started guide mainly for my own use, to have a reference handy to quickly set up a new Laravel project with a MySQL database. But as I felt the need to write it, one might find some interest in it as well.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 23 Apr 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-04-23:posts/how-to-start-a-new-laravel5-project-with-homestead-quick-reference</guid><category>laravel</category><category>homestead</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 4: workflow, extras and conclusion</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-4-workflow-extras-and-conclusion</link><description>&lt;p&gt;Alright! This was a bit of a long road, but we are finally getting there. In the &lt;a href="/posts/2015/03/02/install-and-deploy-a-pelican-blog-using-fabric-part-3-fabric.html" title="Install and deploy a Pelican blog using Fabric - Part 3: Fabric"&gt;previous part&lt;/a&gt;, we used Fabric to fully provision a server and pull our content from a Git repository. In this fourth and last part, we are going to review a complete worklow, take a few extra steps to complete our blog and conclude our journey.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-03-04:posts/install-and-deploy-a-pelican-blog-using-fabric-part-4-workflow-extras-and-conclusion</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 3: Fabric</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-3-fabric</link><description>&lt;p&gt;In &lt;a href="/posts/2015/02/26/install-and-deploy-a-pelican-blog-using-fabric-part-2-installation-and-configuration.html" title="Install and deploy a Pelican blog using Fabric - Part 2: installation and configuration"&gt;part 2&lt;/a&gt;, we covered the installation and configuration of Pelican in our local environment. It is now time to provision our server and publish content using Fabric.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-03-02:posts/install-and-deploy-a-pelican-blog-using-fabric-part-3-fabric</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 2: installation and configuration</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-2-installation-and-configuration</link><description>&lt;p&gt;In &lt;a href="/posts/2015/02/24/install-and-deploy-a-pelican-blog-using-fabric-part-1-local-environment.html" title="Install and deploy a Pelican blog using Fabric - Part 1: local environment"&gt;part 1&lt;/a&gt;, we set up a local environment containing everything Pelican requires to run properly. Let's move on to the installation and configuration of Pelican itself.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-02-26:posts/install-and-deploy-a-pelican-blog-using-fabric-part-2-installation-and-configuration</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 1: local environment</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-1-local-environment</link><description>&lt;p&gt;This series of articles will walk you through the different steps to install, setup and deploy your first &lt;a href="http://docs.getpelican.com/en/latest/index.html" title="Pelican documentation"&gt;Pelican&lt;/a&gt; blog (just like this one).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-02-24:posts/install-and-deploy-a-pelican-blog-using-fabric-part-1-local-environment</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>How to use Vagrant for local web development</title><link>https://tech.osteel.me/posts/how-to-use-vagrant-for-local-web-development</link><description>&lt;p&gt;This article shows how to quickly get up and running with Vagrant, to create and use local Virtual Machines as development environments, all with a single command. This is indeed written from a web developer's standing point, and...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-01-25:posts/how-to-use-vagrant-for-local-web-development</guid><category>vagrant</category><category>tutorial</category><category>webdevelopment</category><category>environment</category></item><item><title>How to use Vagrant on Windows</title><link>https://tech.osteel.me/posts/how-to-use-vagrant-on-windows</link><description>&lt;p&gt;This article shows how to deal with Windows' specificities while trying to work with Vagrant.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-01-25:posts/how-to-use-vagrant-on-windows</guid><category>vagrant</category><category>tutorial</category><category>windows</category></item><item><title>I've got a blog</title><link>https://tech.osteel.me/posts/ive-got-a-blog</link><description>&lt;p&gt;Yeah, finally.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 19 Aug 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2014-08-19:posts/ive-got-a-blog</guid><category>blog</category></item></channel></rss>