<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>osteel's blog</title><link>https://tech.osteel.me/</link><description></description><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><item><title>Upgrade your project to PHP 8.2 with Rector</title><link>https://tech.osteel.me/posts/upgrade-your-project-to-the-latest-php-version-with-rector</link><description>&lt;p&gt;I wanted to upgrade a project to PHP 8.2 and figured I could use Rector for this. Not only was I right, but I had also completely underestimated how easy it was going to be.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2023-03-15:posts/upgrade-your-project-to-the-latest-php-version-with-rector</guid><category>rector</category><category>refactoring</category></item><item><title>Speaking at PHP London and other news</title><link>https://tech.osteel.me/posts/speaking-at-php-london-and-other-news</link><description>&lt;p&gt;I've been rather quiet around here for the past few months, so here's an update about what I've been up to. In this issue: Speaking at PHP London, organising PHP Sussex, update on the PHP CLI tool series.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 31 Jan 2023 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2023-01-31:posts/speaking-at-php-london-and-other-news</guid><category></category></item><item><title>Building a PHP CLI tool using DDD and Event Sourcing. Part 2: the model</title><link>https://tech.osteel.me/posts/a-crypto-activity-tracking-tool-part-2-the-model</link><description>&lt;p&gt;The model is where the software meets the domain. The goal of the model is to identify and express the use cases and constraints that will be built into the software, using schemas and diagrams. It is where we extract the essential concepts from the domain and where we consolidate the ubiquitous language.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 01 Sep 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2022-09-01:posts/a-crypto-activity-tracking-tool-part-2-the-model</guid><category>ddd</category><category>userstory</category><category>userstorymapping</category><category>boundedcontext</category><category>contextmapping</category></item><item><title>Building a PHP CLI tool using DDD and Event Sourcing. Part 1: the domain</title><link>https://tech.osteel.me/posts/a-crypto-activity-tracking-tool-part-1-the-domain</link><description>&lt;p&gt;We continue our exploration of DDD with the expression of the domain. A domain is a group of related concepts and ideas about a field, articulated by experts in that field. Expressing the domain is a way to get familiar with its lexical field and to start building the ubiquitous language, the language to be used consistently in the model and across all communications.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 17 Aug 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2022-08-17:posts/a-crypto-activity-tracking-tool-part-1-the-domain</guid><category>ddd</category></item><item><title>Building a PHP CLI tool using DDD and Event Sourcing. Introduction: why?</title><link>https://tech.osteel.me/posts/a-crypto-activity-tracking-tool-introduction-why</link><description>&lt;p&gt;This is the introduction to a blog series about building a PHP CLI tool to help me track my crypto activity. I haven't built anything yet – the goal is to document my progress as I go, publicly. I intend to use Laravel Zero, Event Sourcing, and to follow a Domain-Driven Design approach.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 13 Jul 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2022-07-13:posts/a-crypto-activity-tracking-tool-introduction-why</guid><category>ddd</category><category>crypto</category></item><item><title>A GitHub workflow to check the compatibility of your PHP package with a range of dependency versions</title><link>https://tech.osteel.me/posts/a-github-workflow-to-check-the-compatibility-of-your-php-package-with-a-range-of-dependency-versions</link><description>&lt;p&gt;A common aspect of a PHP developer's job is to deal with Composer dependencies. We don't usually need to think about supporting various versions of these dependencies, just as we don't need to think about accommodating a range of PHP versions. Things are different for open-source software maintainers – they need to ensure their libraries will work with as many environments as possible. This post explores one way of automating compatibility testing, using a combination of test coverage and a GitHub workflow.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 30 Jun 2022 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2022-06-30:posts/a-github-workflow-to-check-the-compatibility-of-your-php-package-with-a-range-of-dependency-versions</guid><category>github</category><category>workflow</category><category>composer</category><category>compatibilitytesting</category></item><item><title>How to build and distribute beautiful command-line applications with PHP and Composer</title><link>https://tech.osteel.me/posts/how-to-build-and-distribute-beautiful-command-line-applications-with-php-and-composer</link><description>&lt;p&gt;When you think of command-line applications, PHP doesn't immediately come to mind. Yet the language powers many popular tools, either as independent programs or to be used within projects. This tutorial will walk you through the process of creating a simple game running in the terminal, using Symfony's Console Component as a bedrock, GitHub Actions for testing, and Composer for distribution.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 31 Jan 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2022-01-31:posts/how-to-build-and-distribute-beautiful-command-line-applications-with-php-and-composer</guid><category>cli</category><category>composer</category><category>github</category><category>packagist</category></item><item><title>Vim is much cooler than you think</title><link>https://tech.osteel.me/posts/vim-is-much-cooler-than-you-think</link><description>&lt;p&gt;To a large extent, Vim still has a bad rep. This needs to change. But Vim does need a little help to get started, so here's an article explaining the basics, with gifs. The best part? There's probably a Vim extension for your favourite code editor already, so you can start using it today.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 10 Jun 2021 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2021-06-10:posts/vim-is-much-cooler-than-you-think</guid><category>vim</category></item><item><title>A complete guide to Laravel Sail</title><link>https://tech.osteel.me/posts/you-dont-need-laravel-sail</link><description>&lt;p&gt;This post is about what to expect from Laravel Sail, how it works and how to make the most of it; it is also a plea to developers to break away from it, in favour of their own, tailored solution.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2021-01-05:posts/you-dont-need-laravel-sail</guid><category>laravel</category><category>docker</category><category>sail</category></item><item><title>Validate your PHP API tests against OpenAPI definitions – a Laravel example</title><link>https://tech.osteel.me/posts/openapi-backed-api-testing-in-php-projects-a-laravel-example</link><description>&lt;p&gt;This article demonstrates how to write integration tests that compare API responses to OpenAPI 3.0.x definitions in order to validate that the former conform to the latter.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 11 Nov 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-11-11:posts/openapi-backed-api-testing-in-php-projects-a-laravel-example</guid><category>openapi</category><category>laravel</category><category>api</category><category>testing</category></item><item><title>Dynamic GitHub profile README with Github Actions and PHP</title><link>https://tech.osteel.me/posts/dynamic-github-profile-readme-with-github-actions-and-php</link><description>&lt;p&gt;A few weeks ago, GitHub quietly released a feature that was quickly noticed by the community – profile READMEs. A profile README is a global README file for your GitHub profile; in this article, I describe how I've used GitHub Actions and PHP to automatically update my profile README to list my blog's latest publications.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 13 Aug 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-08-13:posts/dynamic-github-profile-readme-with-github-actions-and-php</guid><category>github</category></item><item><title>A simple Git pre-commit hook running PHP_CodeSniffer</title><link>https://tech.osteel.me/posts/a-simple-git-pre-commit-hook-running-php-codesniffer</link><description>&lt;p&gt;Git hooks are scripts that are run every time a specific Git-related event happens, like a commit or a checkout. This article shows you how to use a simple hook to enforce a coding standard at every commit in a PHP project.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 14 Jul 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-07-14:posts/a-simple-git-pre-commit-hook-running-php-codesniffer</guid><category>git</category><category>hook</category><category>php</category><category>commit</category></item><item><title>Docker for local web development, conclusion: where to go from here</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-conclusion-where-to-go-from-here</link><description>&lt;p&gt;I hope you enjoyed going through these tutorials as much as I enjoyed writing them, and that you now clearly see how to use Docker to your advantage, and feel comfortable doing so. That being said, you might still feel like some stones are left unturned, so I will try and flip some of them in this conclusion, the same way I used the introduction to try and address some of the concerns you might have had before taking the plunge.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 06 Jul 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-07-06:posts/docker-for-local-web-development-conclusion-where-to-go-from-here</guid><category>tutorial</category><category>docker</category></item><item><title>Docker for local web development, part 8: scheduled tasks</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-8-scheduled-tasks</link><description>&lt;p&gt;Once we start to get comfortable around Docker and make it a full component of our development environment, inevitably there will come a time when we have to deal with some form of task scheduling.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 08 Jun 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-06-08:posts/docker-for-local-web-development-part-8-scheduled-tasks</guid><category>tutorial</category><category>docker</category><category>cron</category><category>scheduler</category></item><item><title>Docker for local web development, part 7: using a multi-stage build to introduce a worker</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-7-using-a-multi-stage-build-to-introduce-a-worker</link><description>&lt;p&gt;There are many ways to increase an API's responsivity, and one of them which is also the focus of today's article is the use of queues. Queues are basically lists of tasks to be performed at a later time which, unlike flossing, will be completed eventually. What's important about those tasks – called jobs – is that they don't need to be performed during the lifecycle of the initial request.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 25 May 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-05-25:posts/docker-for-local-web-development-part-7-using-a-multi-stage-build-to-introduce-a-worker</guid><category>tutorial</category><category>docker</category><category>worker</category><category>redis</category></item><item><title>Docker for local web development, part 6: expose a local container to the Internet</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-6-expose-a-local-container-to-the-internet</link><description>&lt;p&gt;While using Docker for local development allows us to replicate a production environment as closely as possible in a self-contained way, in some instances exposure to the outside world is unavoidable. Typical use cases include testing a third-party service's webhook (like a transaction confirmation from a payment gateway), or showing a project's advancement to a client.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 11 May 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-05-11:posts/docker-for-local-web-development-part-6-expose-a-local-container-to-the-internet</guid><category>tutorial</category><category>docker</category><category>ngrok</category></item><item><title>Docker for local web development, part 5: HTTPS all the things</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-5-https-all-the-things</link><description>&lt;p&gt;While it is getting ever cheaper and easier to encrypt the web, somehow this evolution doesn't extend to local environments, where bringing in HTTPS is still far from a sinecure. This article intends to ease the pain by showing you how to generate a self-signed SSL/TLS certificate and how to use it with our Docker-based setup, thus getting us one step closer to perfectly mimicking a production environment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 27 Apr 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-04-27:posts/docker-for-local-web-development-part-5-https-all-the-things</guid><category>tutorial</category><category>docker</category><category>ssl</category><category>https</category></item><item><title>Docker for local web development, part 4: smoothing things out with Bash</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-4-smoothing-things-out-with-bash</link><description>&lt;p&gt;As our development environment is taking shape, the number of commands we need to remember starts to build up. With little effort, Bash will allow us to add a layer on top of Docker to abstract away most of the complexity, and introduce a standardised, user-friendly interface instead.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 13 Apr 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-04-13:posts/docker-for-local-web-development-part-4-smoothing-things-out-with-bash</guid><category>tutorial</category><category>docker</category><category>bash</category></item><item><title>Docker for local web development, part 3: a three-tier architecture with frameworks</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-3-a-three-tier-architecture-with-frameworks</link><description>&lt;p&gt;There are many ways to manage a multitiered project with Docker, and while the approach I am about to describe certainly isn't the only one, I also think this is a subject that doesn't get much coverage at all.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 30 Mar 2020 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-30:posts/docker-for-local-web-development-part-3-a-three-tier-architecture-with-frameworks</guid><category>tutorial</category><category>docker</category><category>laravel</category><category>vuejs</category></item><item><title>Docker for local web development, part 2: put your images on a diet</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-2-put-your-images-on-a-diet</link><description>&lt;p&gt;By using standard Linux distributions, we embark a lot of tools and services we don't always need, unnecessarily increasing the size of the images in the process. In turn, this has an impact on performance, security and, sometimes, the cost of deployment.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 16 Mar 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-16:posts/docker-for-local-web-development-part-2-put-your-images-on-a-diet</guid><category>tutorial</category><category>docker</category><category>alpine</category></item><item><title>Docker for local web development, part 1: a basic LEMP stack</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-part-1-a-basic-lemp-stack</link><description>&lt;p&gt;I trust you already read the introduction to this series and are now ready for some action. The first thing to do is to head over to the Docker website and download and install Docker Desktop for Mac or PC, or head over here for installation instructions on various Linux distributions.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2020 12:16:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-04:posts/docker-for-local-web-development-part-1-a-basic-lemp-stack</guid><category>tutorial</category><category>docker</category><category>lemp</category></item><item><title>Docker for local web development, introduction: why should you care?</title><link>https://tech.osteel.me/posts/docker-for-local-web-development-introduction-why-should-you-care</link><description>&lt;p&gt;Among developers, exposure to Docker ranges from having vaguely heard of the technology to using it on a daily basis, the latter category singing its praises while the former is sometimes still struggling with the sheer concept of containers.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2020 12:04:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2020-03-04:posts/docker-for-local-web-development-introduction-why-should-you-care</guid><category>tutorial</category><category>docker</category></item><item><title>Talking about Collections at PHP Quebec</title><link>https://tech.osteel.me/posts/talking-about-collections-at-php-quebec</link><description>&lt;p&gt;Who knew Collections were so popular? After Laravel Montreal last month, I will be speaking about Collections again at PHP Quebec on July 4.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sat, 29 Jun 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2019-06-29:posts/talking-about-collections-at-php-quebec</guid><category>php</category><category>collections</category><category>phpquebec</category><category>presentation</category></item><item><title>Talking about Collections at Laravel Montreal</title><link>https://tech.osteel.me/posts/talking-about-collections-at-laravel-montreal</link><description>&lt;p&gt;I have been a bit busy since I moved to Montreal back in February last year and one of the things I've been doing is regularly attending Laravel Montreal meetups.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 28 May 2019 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2019-05-28:posts/talking-about-collections-at-laravel-montreal</guid><category>laravel</category><category>collections</category><category>laravelmontreal</category><category>presentation</category></item><item><title>Having issues with your cordless Logitech Unifying device on MacOS? Don't throw it away just yet</title><link>https://tech.osteel.me/posts/having-issues-with-your-cordless-logitech-unifying-device-on-macos-dont-throw-it-away-just-yet</link><description>&lt;p&gt;The cordless Logitech Unifying devices can be a bit funny when it comes to MacOS Sierra, be it the scrolling acting weird or the device not being detected altogether. Follow these quick steps to hopefully fix your problem.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 21 Sep 2017 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2017-09-21:posts/having-issues-with-your-cordless-logitech-unifying-device-on-macos-dont-throw-it-away-just-yet</guid><category>logitech</category><category>mouse</category><category>keyboard</category><category>unifying</category><category>macos</category></item><item><title>UK Contractors: should you switch off the Flat Rate Scheme?</title><link>https://tech.osteel.me/posts/uk-contractors-should-you-switch-off-the-flat-rate-scheme</link><description>&lt;p&gt;With the new fiscal year just a few days ahead, as a contractor you've probably heard about the Budget changes. And if you are like me up until a few days ago, you might not be sure whether you should take action or not. Let's try and bring some clarification to these changes.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 26 Mar 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2017-03-26:posts/uk-contractors-should-you-switch-off-the-flat-rate-scheme</guid><category>contracting</category><category>vat</category><category>uk</category><category>flatratescheme</category><category>standardscheme</category></item><item><title>Contracting in the UK: a tax breakdown</title><link>https://tech.osteel.me/posts/contracting-in-the-uk-a-tax-breakdown</link><description>&lt;p&gt;When I started contracting about a year and a half ago, I absolutely didn't want to have to deal with anything accounting-related. Which is fine really, as getting an accountant is highly recommended anyway - for various good reasons - and there is a plethora of companies on the market that do just that.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 22 Dec 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2016-12-22:posts/contracting-in-the-uk-a-tax-breakdown</guid><category>contracting</category><category>taxes</category><category>uk</category></item><item><title>How to enable NFS on Laravel Homestead</title><link>https://tech.osteel.me/posts/how-to-enable-nfs-on-laravel-homestead</link><description>&lt;p&gt;I currently work on a Laravel project composed of multiple microservices that I run locally using Homestead (box v0.4.0 at the time of writing). As I started tinkering around I noticed that requesting the different APIs was super slow, up to 20s per request, which was really unexpected (and annoying to say the least).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 19 Jan 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2016-01-19:posts/how-to-enable-nfs-on-laravel-homestead</guid><category>laravel</category><category>homestead</category><category>nfs</category><category>sharedfolder</category><category>tutorial</category><category>virtualbox</category></item><item><title>From Vagrant to Docker: How to use Docker for local web development</title><link>https://tech.osteel.me/posts/from-vagrant-to-docker-how-to-use-docker-for-local-web-development</link><description>&lt;p&gt;If you are somewhat following what's happening in the tech world, you must have heard of Docker.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Fri, 18 Dec 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-12-18:posts/from-vagrant-to-docker-how-to-use-docker-for-local-web-development</guid><category>docker</category><category>php</category><category>mysql</category><category>phpmyadmin</category><category>nginx</category><category>tutorial</category><category>webdevelopment</category><category>environment</category></item><item><title>How to use the fork of a repository with Composer</title><link>https://tech.osteel.me/posts/how-to-use-the-fork-of-a-repository-with-composer</link><description>&lt;p&gt;When using packages maintained by other developers, you may eventually find yourself waiting for a fix, an update, or the merge of a PR that will be available with the next release. I you can't wait, a workaround is to fork the corresponding repository, make the changes you need and then use your fork instead of the original package.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 10 Aug 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-08-10:posts/how-to-use-the-fork-of-a-repository-with-composer</guid><category>composer</category><category>github</category><category>fork</category><category>repository</category><category>php</category></item><item><title>Handling CORS with Nginx</title><link>https://tech.osteel.me/posts/handling-cors-with-nginx</link><description>&lt;p&gt;With the always wider adoption of API-driven architecture, chances are you already had to deal with cross-origin resource sharing at some point.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 19 Jul 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-07-19:posts/handling-cors-with-nginx</guid><category>cors</category><category>crossoriginresourcesharing</category><category>nginx</category><category>homestead</category></item><item><title>Database management with Adminer (and how to install on Homestead)</title><link>https://tech.osteel.me/posts/database-management-with-adminer-and-how-to-install-on-homestead</link><description>&lt;p&gt;For quite some time now I have been prefering accessing databases from the CLI, but sometimes it can feel overkill when wanting to quickly check or update something, say.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Fri, 19 Jun 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-06-19:posts/database-management-with-adminer-and-how-to-install-on-homestead</guid><category>adminer</category><category>phpmyadmin</category><category>database</category><category>homestead</category><category>laravel</category></item><item><title>Laravel Homestead: debug an API with Xdebug and cURL in Sublime Text</title><link>https://tech.osteel.me/posts/laravel-homestead-debug-an-api-with-xdebug-and-curl-in-sublime-text</link><description>&lt;p&gt;There are a few tutorials out there about how to set up Sublime Text and Xdebug so they play nice together. The good news is that in our case, Homestead has covered the configuration of Xdebug for us: the tool is already available and reporting for duty.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sat, 23 May 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-05-23:posts/laravel-homestead-debug-an-api-with-xdebug-and-curl-in-sublime-text</guid><category>laravel</category><category>homestead</category><category>xdebug</category><category>curl</category><category>sublimetext</category><category>api</category></item><item><title>Extending Homestead: how to customize Laravel's Virtual Machine (the example of Apache)</title><link>https://tech.osteel.me/posts/extending-homestead-how-to-customize-laravels-virtual-machine-the-example-of-apache</link><description>&lt;p&gt;Homestead offers a nice pre-packaged environment. But as a project grows in complexity, there will be a time where extra packages will be necessary. How to install them properly, and not to lose everything any time we need to recreate the box? How does one &lt;em&gt;extend&lt;/em&gt; Homestead?&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 13 May 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-05-13:posts/extending-homestead-how-to-customize-laravels-virtual-machine-the-example-of-apache</guid><category>laravel</category><category>homestead</category><category>apache</category><category>vagrant</category></item><item><title>How to start a new Laravel 5 project with Homestead - quick reference</title><link>https://tech.osteel.me/posts/how-to-start-a-new-laravel5-project-with-homestead-quick-reference</link><description>&lt;p&gt;I wrote this short get-started guide mainly for my own use, to have a reference handy to quickly set up a new Laravel project with a MySQL database. But as I felt the need to write it, one might find some interest in it as well.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 23 Apr 2015 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-04-23:posts/how-to-start-a-new-laravel5-project-with-homestead-quick-reference</guid><category>laravel</category><category>homestead</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 4: workflow, extras and conclusion</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-4-workflow-extras-and-conclusion</link><description>&lt;p&gt;Alright! This was a bit of a long road, but we are finally getting there. In the previous part, we used Fabric to fully provision a server and pull our content from a Git repository. In this fourth and last part, we are going to review a complete worklow, take a few extra steps to complete our blog and conclude our journey.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Wed, 04 Mar 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-03-04:posts/install-and-deploy-a-pelican-blog-using-fabric-part-4-workflow-extras-and-conclusion</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 3: Fabric</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-3-fabric</link><description>&lt;p&gt;In part 2, we covered the installation and configuration of Pelican in our local environment. It is now time to provision our server and publish content using Fabric.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Mon, 02 Mar 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-03-02:posts/install-and-deploy-a-pelican-blog-using-fabric-part-3-fabric</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 2: installation and configuration</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-2-installation-and-configuration</link><description>&lt;p&gt;In part 1, we set up a local environment containing everything Pelican requires to run properly. Let's move on to the installation and configuration of Pelican itself.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Thu, 26 Feb 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-02-26:posts/install-and-deploy-a-pelican-blog-using-fabric-part-2-installation-and-configuration</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>Install and deploy a Pelican blog using Fabric - Part 1: local environment</title><link>https://tech.osteel.me/posts/install-and-deploy-a-pelican-blog-using-fabric-part-1-local-environment</link><description>&lt;p&gt;This series of articles will walk you through the different steps to install, setup and deploy your first Pelican blog (just like this one).&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 24 Feb 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-02-24:posts/install-and-deploy-a-pelican-blog-using-fabric-part-1-local-environment</guid><category>vagrant</category><category>fabric</category><category>tutorial</category><category>python</category><category>blog</category><category>pelican</category></item><item><title>How to use Vagrant for local web development</title><link>https://tech.osteel.me/posts/how-to-use-vagrant-for-local-web-development</link><description>&lt;p&gt;This article shows how to quickly get up and running with Vagrant, to create and use local Virtual Machines as development environments, all with a single command. This is indeed written from a web developer's standing point, and...&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-01-25:posts/how-to-use-vagrant-for-local-web-development</guid><category>vagrant</category><category>tutorial</category><category>webdevelopment</category><category>environment</category></item><item><title>How to use Vagrant on Windows</title><link>https://tech.osteel.me/posts/how-to-use-vagrant-on-windows</link><description>&lt;p&gt;This article shows how to deal with Windows' specificities while trying to work with Vagrant.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Sun, 25 Jan 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2015-01-25:posts/how-to-use-vagrant-on-windows</guid><category>vagrant</category><category>tutorial</category><category>windows</category></item><item><title>I've got a blog</title><link>https://tech.osteel.me/posts/ive-got-a-blog</link><description>&lt;p&gt;Yeah, finally.&lt;/p&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">osteel</dc:creator><pubDate>Tue, 19 Aug 2014 00:00:00 +0100</pubDate><guid isPermaLink="false">tag:tech.osteel.me,2014-08-19:posts/ive-got-a-blog</guid><category>blog</category></item></channel></rss>